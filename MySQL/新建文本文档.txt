每一个索引在本质上都对应着一颗B+树，InnoDB总会自动创建一个主键索引，为unique修饰的列创建二级索引
create table record_format(
c1 varchar(10),
c2 varchar(10) not null,
c3 char(10),
c4 varchar(10)
)charset=ascii row_format=compact;
连接查询的过滤条件：
	1.涉及单表的过滤条件
	2.涉及多表的过滤条件
	
驱动表和被驱动表：
对于外连接来说，必须有on来指明连接条件 where 语句可选。如果没有on，则会报错
on连接条件有单表过滤条件，那么仅仅是对参加连接的行数进行了限制，但是驱动表总是假如到结果集中
在on条件中，除了连接条件外，无论是对主表还是副表进行条件限制，只会限制参加连接的行，但是主表的所有的数据肯定是会出现在结果集中的。


注意创建外键约束注意事项：
	1.子表的外键列的个数应该与父表的外键列个数应该相同，
	2.在往子表中插入数据时，如果插入的外键列的值在父表中不存在，那么会插入错误。在父表中删除一个
	被子表外键列参考的列，那么如果子表中该外键列村子，那么会删除错误。
	3.外键列会自动创建索引。
	4父表中被子表依赖的列或者列组合必须建立索引，如果该列或者列组合已经是主键或者有UNIQUE属性，那么它们也就被默认建立了索引。如果时索引列的一部分，那么也可以。
	
	
视图的本质：只是一个查询语句的别名，因为查询语句返回的本质上也是一个表，所以我们也可以对这个表进行操作。
注意：where和on过滤条件的区别：
	对于inner join 这两者没有任何区别，统一对待
	对于outer join where条件是第一过滤条件，即对于驱动表，只要满足where过滤条件的记录，都有可能会进行连接操作。并且这些记录肯定是会加入到结果集中的。但是on过滤条件可能会对驱动表进行再一次过滤，此处的过滤意味着驱动表的那些经过了where条件过滤下来的记录不进行和被驱动表进行连接操作。但是这些记录还是会加入到最后的结果集中。同理，在on条件下对被驱动表也可以进行不连接的过滤。这些记录最终不会加入到最终的结果集中。